/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppRouteImport } from './routes/app'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PricingIndexRouteImport } from './routes/pricing/index'
import { Route as FeaturesIndexRouteImport } from './routes/features/index'
import { Route as AppIndexRouteImport } from './routes/app/index'
import { Route as AuthCallbackRouteImport } from './routes/auth/callback'
import { Route as AppApiClientIndexRouteImport } from './routes/app/api-client/index'

const AppRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PricingIndexRoute = PricingIndexRouteImport.update({
  id: '/pricing/',
  path: '/pricing/',
  getParentRoute: () => rootRouteImport,
} as any)
const FeaturesIndexRoute = FeaturesIndexRouteImport.update({
  id: '/features/',
  path: '/features/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)
const AuthCallbackRoute = AuthCallbackRouteImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const AppApiClientIndexRoute = AppApiClientIndexRouteImport.update({
  id: '/api-client/',
  path: '/api-client/',
  getParentRoute: () => AppRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/auth/callback': typeof AuthCallbackRoute
  '/app/': typeof AppIndexRoute
  '/features': typeof FeaturesIndexRoute
  '/pricing': typeof PricingIndexRoute
  '/app/api-client': typeof AppApiClientIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/app': typeof AppIndexRoute
  '/features': typeof FeaturesIndexRoute
  '/pricing': typeof PricingIndexRoute
  '/app/api-client': typeof AppApiClientIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/auth/callback': typeof AuthCallbackRoute
  '/app/': typeof AppIndexRoute
  '/features/': typeof FeaturesIndexRoute
  '/pricing/': typeof PricingIndexRoute
  '/app/api-client/': typeof AppApiClientIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/auth/callback'
    | '/app/'
    | '/features'
    | '/pricing'
    | '/app/api-client'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/callback'
    | '/app'
    | '/features'
    | '/pricing'
    | '/app/api-client'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/auth/callback'
    | '/app/'
    | '/features/'
    | '/pricing/'
    | '/app/api-client/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  AuthCallbackRoute: typeof AuthCallbackRoute
  FeaturesIndexRoute: typeof FeaturesIndexRoute
  PricingIndexRoute: typeof PricingIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pricing/': {
      id: '/pricing/'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/features/': {
      id: '/features/'
      path: '/features'
      fullPath: '/features'
      preLoaderRoute: typeof FeaturesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/api-client/': {
      id: '/app/api-client/'
      path: '/api-client'
      fullPath: '/app/api-client'
      preLoaderRoute: typeof AppApiClientIndexRouteImport
      parentRoute: typeof AppRoute
    }
  }
}

interface AppRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
  AppApiClientIndexRoute: typeof AppApiClientIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppIndexRoute: AppIndexRoute,
  AppApiClientIndexRoute: AppApiClientIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  AuthCallbackRoute: AuthCallbackRoute,
  FeaturesIndexRoute: FeaturesIndexRoute,
  PricingIndexRoute: PricingIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
